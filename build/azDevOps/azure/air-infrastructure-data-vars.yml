variables:
  - name: region
    value: "ukwest"
  - name: company
    value: "mycompany"
  - name: project
    value: "dataproj"
  - name: domain
    value: "mydomain"
  - name: self_repo
    value: "dataproj"
  - name: self_generic_name
    value: $(company)-$(domain)

  # Terraform Configuration

  # State configuration

  # Stacks operates Terraform states based on workspaces **IT IS VERY IMPORTANT** that you ensure a unique name for each application definition
  # Furthermore **IT IS VERY IMPORTANT** that you change the name of a workspace for each deployment stage
  # there are some best practices around this if you are going for feature based environments
  # avoid running anything past dev that is not on master
  - name: tf_state_rg
    value: "tfgroup"
  - name: tf_state_storage
    value: "tfstorage"
  - name: tf_state_container
    value: "tfcontainer"
  - name: tf_state_key
    value: $(domain)
  - name: TF_FILE_LOCATION
    value: $(self_repo_tf_src)

  # App Specific Taxonomy
  - name: resource_def_name
    value: $(company)-$(domain)
  - name: component
    value: de #core
  - name: role
    value: data-infrastructure

  # Agent configuration
  - name: TaskctlVersion
    value: 1.4.2
  - name: pool_vm_image
    value: ubuntu-20.04

  # SelfConfig
  # If you haven't specified source_repo at cli runtime please ensure you replace it here
  # It is case sensitive for TFS based repos

  - name: self_repo_dir
    value: "$(Agent.BuildDirectory)/s/$(self_repo)"
  - name: self_repo_tf_src
    value: deploy/azure/infra
  - name: self_repo_tf_dir
    value: "$(self_repo_dir)/$(self_repo_tf_src)"

  # Test Configuration
  - name: FUNCTIONAL_TESTS_SRC_DIR
    value: src/tests/Functional
  - name: FUNCTIONAL_TESTS_RUN_DIR
    value: /app/tests
  - name: FUNCTIONAL_TEST_BASEURL
    value: https://$(Environment.ShortName)-$(domain).$(dns_base_domain)$(k8s_app_route)/

  # Versioning
  - name: version_major
    value: 0
  - name: version_minor
    value: 0
  - name: version_revision
    value: $[counter(join(variables['version_major'], join('-', variables['version_minor'])), 0)]
  - name: version_number
    value: $(version_major).$(version_minor).$(version_revision)

  # Dashboard
  - name: DASHBOARD_VERSION
    value: $(Build.BuildNumber)
  - name: DASHBOARD_TAGS
    value: environment=$(System.StageName),source=$(Build.SourceBranchName),app=$(Build.DefinitionName)
  - name: DASHBOARD_MEASUREMENT
    value: deployment # Static definition within Influx Config
    # Group should contain:
    # DASHBOARD_INFLUX_ORG
    # DASHBOARD_INFLUX_BUCKET
    # DASHBOARD_INFLUX_TOKEN
    # DASHBOARD_INFLUX_SERVER

  # GitHub infomration
  - name: create_release
    value: true #false
  - name: github_release_service_connection
    value: GitHubReleases
  - name: github_org
    value: $(company)


  - name: git_integration
    value: null #github removed github integration with ADF
  - name: git_integration_prod
    value: null
  - name: sql_admin_login
    value: mssqladmin
  - name: agentpool_name
    value: "amido-stacks-core-data-agent-pool"
